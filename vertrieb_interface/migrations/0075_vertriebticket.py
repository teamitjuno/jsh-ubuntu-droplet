# Generated by Django 5.0.2 on 2024-12-17 09:59

import django.core.validators
import django.db.models.deletion
import vertrieb_interface.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("vertrieb_interface", "0074_vertriebangebot_geruestoeffentlich_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="VertriebTicket",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ticket_id",
                    models.CharField(
                        max_length=255, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("current_date", models.DateField(auto_now_add=True)),
                ("is_locked", models.BooleanField(default=False)),
                ("zoho_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "angebot_zoho_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("angebot_id_assigned", models.BooleanField(default=False)),
                (
                    "angenommenes_angebot",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", ""),
                            ("angenommen", "angenommen"),
                            ("bekommen", "bekommen"),
                            ("in Kontakt", "in Kontakt"),
                            ("Kontaktversuch", "Kontaktversuch"),
                            ("abgelehnt", "abgelehnt"),
                            ("abgelaufen", "abgelaufen"),
                            ("on Hold", "on Hold"),
                            ("storniert", "storniert"),
                        ],
                        default="",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "status_pva",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                ("status_change_field", models.DateTimeField(blank=True, null=True)),
                (
                    "status_change_date",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "telefon_festnetz",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "telefon_mobil",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("zoho_kundennumer", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                (
                    "text_for_email",
                    models.TextField(
                        blank=True,
                        default="\n                Sehr geehrter Interessent,\n\n                anbei wie besprochen das Angebot im Anhang als PDF-Dokument.\n\n                Bei Fragen stehen wir Ihnen gern jederzeit zur Verfügung!\n                \n\n                Wir wünschen Ihnen einen schönen Tag und würden uns über eine positive Rückmeldung freuen\n                ",
                        null=True,
                    ),
                ),
                (
                    "name_display_value",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "vertriebler_display_value",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "vertriebler_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "adresse_pva_display_value",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "angebot_bekommen_am",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "anfrage_vom",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "postanschrift_latitude",
                    models.CharField(
                        blank=True, default="00000", max_length=255, null=True
                    ),
                ),
                (
                    "postanschrift_longitude",
                    models.CharField(
                        blank=True, default="00000", max_length=255, null=True
                    ),
                ),
                ("notizen", models.TextField(blank=True, null=True)),
                ("pva_klein", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "b2b_partner",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "name_prefix",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "name_last_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "name_suffix",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "name_first_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "leadstatus",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ausstehend", "ausstehend"),
                            ("reklamiert", "reklamiert"),
                            ("akzeptiert", "akzeptiert"),
                            ("abgelehnt", "abgelehnt"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "anfrage_ber",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "empfohlen_von",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "termine_text",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("termine_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "ablehnungs_grund",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Abweichende Kundenvorstellung zum Thema PVA",
                                "Kundenvorstellung zum Thema PVA unterscheidet sich",
                            ),
                            ("Gebäude ungeeignet", "Das Gebäude ist nicht geeignet"),
                            (
                                "Günstigerer Mitbewerber",
                                "Ein Konkurrent bietet günstigere Optionen",
                            ),
                            (
                                "Investition lohnt sich nicht",
                                "Eine Investition lohnt sich nicht",
                            ),
                            (
                                "Investition zu teuer",
                                "Die Investitionskosten sind zu hoch",
                            ),
                            (
                                "Kunde hat kein Interesse mehr",
                                "Der Kunde hat kein Interesse mehr",
                            ),
                            (
                                "Kunde ist zu alt",
                                "Der Kunde ist nicht mehr interessiert",
                            ),
                            (
                                "Kunde möchte 3-phasige Notstromversorgung",
                                "Der Kunde benötigt eine 3-phasige Notstromversorgung",
                            ),
                            (
                                "Kunde möchte deutsche Produkte",
                                "Der Kunde bevorzugt deutsche Produkte",
                            ),
                            (
                                "Kunde möchte erst später bauen",
                                "Der Kunde möchte zu einem späteren Zeitpunkt bauen",
                            ),
                            (
                                "Kunde möchte Förderung abwarten",
                                "Der Kunde möchte auf Fördermittel warten",
                            ),
                            (
                                "Kunde möchte lokalen Ansprechpartner",
                                "Der Kunde wünscht einen Ansprechpartner vor Ort",
                            ),
                            (
                                "Kunde möchte PVA nur mieten",
                                "Der Kunde möchte die PVA-Anlage nur mieten",
                            ),
                            (
                                "Kunde war nicht erreichbar",
                                "Der Kunde war nicht erreichbar",
                            ),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "anrede",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Familie", "Familie"),
                            ("Firma", "Firma"),
                            ("Herr", "Herr"),
                            ("Herr Dr.", "Herr Dr."),
                            ("Herr Prof.", "Herr Prof."),
                            ("Frau", "Frau"),
                            ("Frau Prof.", "Frau Prof."),
                            ("Frau Dr.", "Frau Dr."),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, default="------", max_length=100),
                ),
                (
                    "vorname_nachname",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "zoho_first_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "zoho_last_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("firma", models.CharField(blank=True, max_length=100)),
                ("strasse", models.CharField(blank=True, max_length=100)),
                ("ort", models.CharField(blank=True, max_length=100)),
                (
                    "anlagenstandort",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("hersteller", models.CharField(default="Huawei", max_length=100)),
                (
                    "wechselrichter_model",
                    models.CharField(default="----", max_length=100),
                ),
                ("speicher_model", models.CharField(default="----", max_length=100)),
                ("smartmeter_model", models.CharField(default="----", max_length=100)),
                ("gesamtkapazitat", models.PositiveIntegerField(default=0)),
                ("speicher", models.BooleanField(default=False)),
                (
                    "anz_speicher",
                    models.PositiveIntegerField(
                        default=0, validators=[vertrieb_interface.utils.validate_range]
                    ),
                ),
                ("wandhalterung_fuer_speicher", models.BooleanField(default=False)),
                (
                    "anz_wandhalterung_fuer_speicher",
                    models.PositiveIntegerField(default=0),
                ),
                (
                    "ausrichtung",
                    models.CharField(
                        choices=[("Sud", "Sud"), ("Ost/West", "Ost/West")],
                        default="Ost/West",
                        max_length=10,
                    ),
                ),
                (
                    "komplex",
                    models.CharField(
                        choices=[
                            (
                                "einfach, einfach erreichbar",
                                "einfach, einfach erreichbar",
                            ),
                            (
                                "einfach, schwer erreichbar",
                                "einfach, schwer erreichbar",
                            ),
                            (
                                "komplex, einfach erreichbar",
                                "komplex, einfach erreichbar",
                            ),
                            (
                                "komplex, schwer erreichbar",
                                "komplex, schwer erreichbar",
                            ),
                            ("sehr komplex", "sehr komplex"),
                        ],
                        default="sehr komplex",
                        max_length=30,
                    ),
                ),
                (
                    "solar_module",
                    models.CharField(
                        default="Phono Solar PS420M7GFH-18/VNH", max_length=100
                    ),
                ),
                ("modulleistungWp", models.PositiveIntegerField(default=420)),
                (
                    "modulanzahl",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("elwa", models.BooleanField(default=False)),
                ("thor", models.BooleanField(default=False)),
                ("heizstab", models.BooleanField(default=False)),
                ("notstrom", models.BooleanField(default=False)),
                ("optimizer", models.BooleanField(default=False)),
                ("anzOptimizer", models.PositiveIntegerField(default=0)),
                ("apzFeld", models.BooleanField(default=False)),
                ("zaehlerschrank", models.BooleanField(default=False)),
                ("potentialausgleich", models.BooleanField(default=False)),
                ("beta_platte", models.BooleanField(default=False)),
                ("metall_ziegel", models.BooleanField(default=False)),
                ("prefa_befestigung", models.BooleanField(default=False)),
                ("midZaehler", models.PositiveIntegerField(default=0)),
                ("wallbox", models.BooleanField(default=False)),
                ("wallboxtyp", models.CharField(blank=True, max_length=100, null=True)),
                ("wallbox_anzahl", models.PositiveIntegerField(default=0)),
                (
                    "kabelanschluss",
                    models.FloatField(
                        blank=True,
                        default=10.0,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("hub_included", models.BooleanField(default=False)),
                ("geruestKunde", models.BooleanField(default=False)),
                ("geruestOeffentlich", models.BooleanField(default=False)),
                ("smartDongleLte", models.BooleanField(default=False)),
                ("dachhakenKunde", models.BooleanField(default=False)),
                (
                    "solar_module_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "batteriespeicher_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "smartmeter_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "wallbox_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "notstrom_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "optimizer_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "angebotsumme",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("profile_foto", models.BinaryField(blank=True, null=True)),
                ("ticket_pdf", models.BinaryField(blank=True, null=True)),
                ("ag_data", models.TextField(blank=True)),
                ("ag_fetched_data", models.TextField(blank=True, null=True)),
                ("countdown_on", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
