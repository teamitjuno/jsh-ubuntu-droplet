# Generated by Django 4.2.2 on 2023-08-14 11:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Calculator",
            fields=[
                (
                    "calculator_id",
                    models.CharField(
                        max_length=255, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "verbrauch",
                    models.FloatField(
                        default=15000,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "grundpreis",
                    models.FloatField(
                        default=9.8,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "arbeitspreis",
                    models.FloatField(
                        default=46.8,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "prognose",
                    models.FloatField(
                        default=5.2,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("zeitraum", models.PositiveIntegerField(default=15)),
                (
                    "bis10kWp",
                    models.FloatField(
                        default=8.2,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "bis40kWp",
                    models.FloatField(
                        default=7.1,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("speicher", models.BooleanField(default=False)),
                ("anz_speicher", models.PositiveIntegerField(default=0)),
                ("wallbox", models.BooleanField(default=False)),
                (
                    "ausrichtung",
                    models.CharField(
                        choices=[("Sud", "Sud"), ("Ost/West", "Ost/West")],
                        default="Ost/West",
                        max_length=10,
                    ),
                ),
                (
                    "komplex",
                    models.CharField(
                        choices=[
                            (
                                "einfach, einfach erreichbar",
                                "einfach, einfach erreichbar",
                            ),
                            (
                                "einfach, schwer erreichbar",
                                "einfach, schwer erreichbar",
                            ),
                            (
                                "komplex, einfach erreichbar",
                                "komplex, einfach erreichbar",
                            ),
                            (
                                "komplex, schwer erreichbar",
                                "komplex, schwer erreichbar",
                            ),
                            ("sehr komplex", "sehr komplex"),
                        ],
                        default="sehr komplex",
                        max_length=30,
                    ),
                ),
                (
                    "solar_module",
                    models.CharField(
                        default="Phono Solar PS420M7GFH-18/VNH", max_length=100
                    ),
                ),
                ("modulleistungWp", models.PositiveIntegerField(default=420)),
                (
                    "modulanzahl",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "garantieWR",
                    models.CharField(
                        choices=[
                            ("keine", "keine"),
                            ("15 Jahre", "15 Jahre"),
                            ("20 Jahre", "20 Jahre"),
                        ],
                        default="keine",
                        max_length=10,
                    ),
                ),
                ("eddi", models.BooleanField(default=False)),
                ("notstrom", models.BooleanField(default=False)),
                ("optimizer", models.BooleanField(default=False)),
                ("anzOptimizer", models.PositiveIntegerField(default=0)),
                ("wallboxtyp", models.CharField(blank=True, max_length=100, null=True)),
                ("wallbox_anzahl", models.PositiveIntegerField(default=0)),
                (
                    "kabelanschluss",
                    models.FloatField(
                        default=10.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("hub_included", models.BooleanField(default=False)),
                (
                    "solar_module_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "batteriespeicher_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "wallbox_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "notstrom_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "eddi_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "optimizer_angebot_price",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "angebotsumme",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "benotigte_restenergie",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "nutzbare_nutzenergie",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "erzeugte_energie_pro_jahr",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "einspreiseverg√ºtung_gesamt",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "abzug_vergutung",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("Ersparnis", models.FloatField(default=0.0)),
                (
                    "kosten_fur_restenergie",
                    models.FloatField(
                        default=0.0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("Rest_liste", models.TextField(blank=True, null=True)),
                ("Arbeits_liste", models.TextField(blank=True, null=True)),
                ("Full_ticket_preis", models.FloatField(default=0.0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
